:mod:`genericPIWrapper`
=======================

.. py:module:: genericPIWrapper


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   genericPIWrapper.genericAPI




Attributes
~~~~~~~~~~

.. autoapisummary::

   genericPIWrapper.TXD0
   genericPIWrapper.RXD0
   genericPIWrapper.GEN0
   genericPIWrapper.GEN1
   genericPIWrapper.GEN2
   genericPIWrapper.GEN3
   genericPIWrapper.GEN4
   genericPIWrapper.GEN5
   genericPIWrapper.GEN6
   genericPIWrapper.CE0_N
   genericPIWrapper.CE1_N
   genericPIWrapper.SDA_0
   genericPIWrapper.SCL_0
   genericPIWrapper.GCLK
   genericPIWrapper.MOSI
   genericPIWrapper.MISO
   genericPIWrapper.SCLK
   genericPIWrapper.Shuttle_MISO
   genericPIWrapper.Shuttle_MOSI
   genericPIWrapper.Shuttle_SCK
   genericPIWrapper.Shuttle_CS
   genericPIWrapper.Shuttle_IO5_INTA
   genericPIWrapper.Shuttle_IO0
   genericPIWrapper.Shuttle_IO1
   genericPIWrapper.Shuttle_IO2
   genericPIWrapper.Shuttle_IO3
   genericPIWrapper.Shuttle_SDA
   genericPIWrapper.Shuttle_SCL
   genericPIWrapper.Shuttle_IO8
   genericPIWrapper.Shuttle_INTB_IO6
   genericPIWrapper.Shuttle_INTC_IO7
   genericPIWrapper.Shuttle_IO4


.. data:: TXD0
   :annotation: = 14

   

.. data:: RXD0
   :annotation: = 15

   

.. data:: GEN0
   :annotation: = 17

   

.. data:: GEN1
   :annotation: = 18

   

.. data:: GEN2
   :annotation: = 27

   

.. data:: GEN3
   :annotation: = 22

   

.. data:: GEN4
   :annotation: = 23

   

.. data:: GEN5
   :annotation: = 24

   

.. data:: GEN6
   :annotation: = 25

   

.. data:: CE0_N
   :annotation: = 8

   

.. data:: CE1_N
   :annotation: = 7

   

.. data:: SDA_0
   :annotation: = 2

   

.. data:: SCL_0
   :annotation: = 3

   

.. data:: GCLK
   :annotation: = 4

   

.. data:: MOSI
   :annotation: = 10

   

.. data:: MISO
   :annotation: = 9

   

.. data:: SCLK
   :annotation: = 11

   

.. data:: Shuttle_MISO
   

   

.. data:: Shuttle_MOSI
   

   

.. data:: Shuttle_SCK
   

   

.. data:: Shuttle_CS
   

   

.. data:: Shuttle_IO5_INTA
   

   

.. data:: Shuttle_IO0
   

   

.. data:: Shuttle_IO1
   :annotation: = 19

   

.. data:: Shuttle_IO2
   

   

.. data:: Shuttle_IO3
   :annotation: = 12

   

.. data:: Shuttle_SDA
   

   

.. data:: Shuttle_SCL
   

   

.. data:: Shuttle_IO8
   

   

.. data:: Shuttle_INTB_IO6
   

   

.. data:: Shuttle_INTC_IO7
   

   

.. data:: Shuttle_IO4
   

   

.. class:: genericAPI(adapter='PTGO', **kwargs)


   .. attribute:: debug
      :annotation: = False

      

   .. attribute:: communication_via_SPI
      :annotation: = False

      

   .. attribute:: interface
      :annotation: = 

      

   .. attribute:: dummy
      :annotation: = 0

      

   .. attribute:: sensorID
      :annotation: = 0

      

   .. attribute:: i2c_SetSpeed
      :annotation: = False

      

   .. attribute:: spi_port
      :annotation: = 0

      

   .. method:: setDebug(self, enable)

      Enable/disable debugging in this wrapper


   .. method:: pinConfig(self, pinNr, direction, outputLevel='LOW')

      Raspberry Pi GPIO Configuration


   .. method:: sensorSPIConfig(self, cs_pin=0, speedKHz=100, spiMode=0, spi_16bit=True)


   .. method:: read(self, registerAddress, length=0, sensorAddress=0, nbDummyBytes=0)

      It reads length data from register at registerAddress and returns a list


   .. method:: write(self, registerAddress, data, sensorAddress=0)

      It writes 'data' to register at 'registerAddress'


   .. method:: getGPIOSoftVersion(self)

      It gets the GPIO module version


   .. method:: setGPIOWarning(self, enable)

      It enables/disables the GPIO warning messages


   .. method:: setGPIOclean(self)

      It sets a GPIO input/output settings clean


   .. method:: setPinSwitchState(self, pinNr)

      It toggles the signal level of the output pin number pinNr


   .. method:: getBoardInfo(self, PiRev=True, RAM=True, Rev=True, Type=True, Proc=True, Manuf=True)

      It gets Rpi information: Pi revision, RAM, Revision, Type, Processor, Manufacturer


   .. method:: set_masked_value(self, reg, bit, width, value)

      Return the modified temp_register value.
      The signal starts at 'bit' in the register, is 'width' bits long
      'Value' should be assign to this signal


   .. method:: get_masked_value(self, reg, bit, width)

      Return the masked and shifted value from the reg.
      The signal starts at 'bit' in the register, is 'width' bits long
      'Value' is the current value of the signal.


   .. method:: initMUX(self)

      GPIO 6, 13, 19, 26 is used by the MUX board. Only 16 address is available.


   .. method:: setMUX(self, address)

      GPIO 6, 13, 19, 26 is used by the MUX board. Only 16 address is available.


   .. method:: set_adapter(self, adapter)


   .. method:: word_to_2bytes(self, word)


   .. method:: two_bytes_to_word(self, MSB, LSB)



